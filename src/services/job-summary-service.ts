/**
 * Job Summary service for generating GitHub Actions Job Summaries
 */

import * as core from "@actions/core";
import { AnalysisResult, AnalysisOptions } from "../types/index.js";
import { generateAnalysisContent, RepositoryContext } from "../utils/markdown-utils.js";

/**
 * Generate complete job summary
 */
function generateJobSummary(
  results: AnalysisResult[],
  config: AnalysisOptions,
  eventType: string,
  context: RepositoryContext,
): string {
  const header = `# üîç Analysis Results

This summary was automatically generated by the Markup AI GitHub Action for **${eventType}** event.`;

  return generateAnalysisContent(results, config, header, eventType, context);
}

/**
 * Create and write job summary to GitHub Actions
 */
export async function createJobSummary(
  results: AnalysisResult[],
  config: AnalysisOptions,
  eventType: string,
  context: RepositoryContext,
): Promise<void> {
  try {
    if (results.length === 0) {
      await core.summary
        .addHeading("üîç Analysis Results")
        .addRaw("No files were analyzed.")
        .write();
      return;
    }

    const summaryContent = generateJobSummary(results, config, eventType, context);

    await core.summary.addRaw(summaryContent).write();

    core.info("‚úÖ Job summary created successfully");
  } catch (error) {
    core.error(`Failed to create job summary: ${error}`);
  }
}
